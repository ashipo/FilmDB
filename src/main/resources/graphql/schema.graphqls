scalar Date
  @specifiedBy(url:
    "https://tools.ietf.org/html/rfc3339"
  )
scalar Long
scalar NonBlankString

type Query {
    login(username: String!, password: String!): String!
    filmById(id: Long!): Film
    films(page: Int = 0, pageSize: Int = 10): [Film]
}

type Mutation {
    deleteFilm(id: Long!): Long
    createFilm(input: FilmInput!): Film
    updateFilm(id: Long!, input: FilmInput!): Film

    """
    Set directors for a `Film`.
    `directorsIds` is a list of `Person.id`.
    If `directorsIds` is omitted or empty, all directors are removed.
    """
    updateFilmDirectors(filmId: Long!, directorsIds: [Long!]): Film

    "Create a `Role`"
    createRole(roleInput: RoleInput!): Role
}

type Film {
    id: Long
    title: String
    synopsis: String
    releaseDate: Date
    directors: [Person]
    roles: [Role]
}

type Person {
    id: Long
    name: String
    dob: Date
    filmsDirected: [Film]
    roles: [Role]
}

type Role {
    film: Film
    person: Person
    character: String
}

input FilmInput {
    title: NonBlankString!
    releaseDate: Date!
    synopsis: String
}

input RoleInput {
    filmId: Long!
    personId: Long!
    character: NonBlankString!
}
