plugins {
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'java'
}

group = 'com.demo'
version = '1.0.0'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.flywaydb:flyway-core'
	def mapstruct = '1.5.5.Final'
	implementation "org.mapstruct:mapstruct:${mapstruct}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct}"
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
}

test {
	useJUnitPlatform()
}

sourceSets {
	integrationTest {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
		java.srcDir file("src/integrationTest/java")
		resources.srcDir file("src/integrationTest/resources")
	}
}
