plugins {
    alias(libs.plugins.boot)
    alias(libs.plugins.dependency.management)
    id 'java'
    id 'idea'
}

group = 'com.demo'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

sourceSets {
    integrationTest {
        compileClasspath = sourceSets.main.output + compileClasspath
        runtimeClasspath = sourceSets.main.output + runtimeClasspath
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

idea {
    module {
        testSources.from(sourceSets.integrationTest.java.srcDirs)
        testResources.from(sourceSets.integrationTest.resources.srcDirs)
    }
}

tasks.register("integrationTest", Test) {
    description = "Runs integration tests."
    group = "verification"

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test

    useJUnitPlatform()

    testLogging {
        events "failed"
    }
}

check.dependsOn integrationTest

dependencies {
    implementation project(':data')
    implementation(libs.spring.boot.starter.data.jpa)
    implementation(libs.spring.boot.starter.graphql)
    implementation(libs.spring.boot.starter.hateoas)
    implementation(libs.spring.boot.starter.security)
    implementation(libs.spring.boot.starter.validation)
    implementation(libs.spring.boot.starter.web)
    implementation(libs.springdoc.openapi.starter.webmvc.ui)
    implementation(libs.graphql.scalars)
    compileOnly(libs.jsr305)
    implementation(libs.mapstruct)
    annotationProcessor(libs.mapstruct.processor)
    implementation(libs.jjwt.api)
    runtimeOnly(libs.jjwt.impl)
    runtimeOnly(libs.jjwt.jackson)

    testImplementation(libs.spring.boot.starter.test)

    integrationTestImplementation(libs.spring.boot.starter.test)
    integrationTestImplementation(libs.spring.security.test)
    integrationTestImplementation(libs.spring.graphql.test)
    integrationTestImplementation(libs.spring.webflux)
}

test {
    useJUnitPlatform()
    testLogging {
        events "failed"
    }
}
